a529332c5c31a183df233aee2ce80a07
"use strict";

/* istanbul ignore next */
var cov_1yb2nw5muv = function () {
  var path = "/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/src/presets/umi-rematch.ts";
  var hash = "3101f361bb44854b3be66ad9795603a7d776ba4f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/src/presets/umi-rematch.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 14
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 63
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "4": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "5": {
        start: {
          line: 7,
          column: 10
        },
        end: {
          line: 7,
          column: 12
        }
      },
      "6": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 54
        }
      },
      "7": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 11,
          column: 1
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 61
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "11": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "12": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "13": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "14": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 25
        }
      },
      "15": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 136
        }
      },
      "16": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 22
          }
        },
        loc: {
          start: {
            line: 9,
            column: 45
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 13
          }
        },
        loc: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 20,
            column: 14
          }
        },
        loc: {
          start: {
            line: 20,
            column: 46
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 14
          },
          end: {
            line: 26,
            column: 15
          }
        },
        loc: {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 85
          },
          end: {
            line: 24,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 85
          },
          end: {
            line: 24,
            column: 100
          }
        }, {
          start: {
            line: 24,
            column: 104
          },
          end: {
            line: 24,
            column: 106
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        }, {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 28
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "3101f361bb44854b3be66ad9795603a7d776ba4f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_1yb2nw5muv.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var tslib_1 =
/* istanbul ignore next */
(cov_1yb2nw5muv.s[1]++, require("tslib"));
var minimatch_1 =
/* istanbul ignore next */
(cov_1yb2nw5muv.s[2]++, tslib_1.__importDefault(require("minimatch")));
var loadTpl_1 =
/* istanbul ignore next */
(cov_1yb2nw5muv.s[3]++, require("@/utils/loadTpl"));
var match_1 =
/* istanbul ignore next */
(cov_1yb2nw5muv.s[4]++, require("@/utils/match"));
var tpl =
/* istanbul ignore next */
(cov_1yb2nw5muv.s[5]++, '');
var defaultIncludes =
/* istanbul ignore next */
(cov_1yb2nw5muv.s[6]++, ['**/src/*?(.tsx|.jsx|.ts|.js)']);

/* istanbul ignore next */
cov_1yb2nw5muv.s[7]++;

var isRematchModel = function (resourcePath) {
  /* istanbul ignore next */
  cov_1yb2nw5muv.f[0]++;
  cov_1yb2nw5muv.s[8]++;
  return minimatch_1.default(resourcePath, '**/models/**');
};

/* istanbul ignore next */
cov_1yb2nw5muv.s[9]++;
exports.UmiRematch = {
  name: 'umi-rematch',
  onInit: function () {
    /* istanbul ignore next */
    cov_1yb2nw5muv.f[1]++;
    cov_1yb2nw5muv.s[10]++;

    if (tpl) {
      /* istanbul ignore next */
      cov_1yb2nw5muv.b[0][0]++;
      cov_1yb2nw5muv.s[11]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1yb2nw5muv.b[0][1]++;
    }

    cov_1yb2nw5muv.s[12]++;
    tpl = loadTpl_1.loadTpl('rematch');
  },
  onMatch: function (resourcePath, options) {
    /* istanbul ignore next */
    cov_1yb2nw5muv.f[2]++;
    cov_1yb2nw5muv.s[13]++;

    if (!isRematchModel(resourcePath)) {
      /* istanbul ignore next */
      cov_1yb2nw5muv.b[1][0]++;
      cov_1yb2nw5muv.s[14]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1yb2nw5muv.b[1][1]++;
    }

    cov_1yb2nw5muv.s[15]++;
    return match_1.match(resourcePath, tslib_1.__assign({}, options, {
      include: (
      /* istanbul ignore next */
      (cov_1yb2nw5muv.b[2][0]++, options.include) ||
      /* istanbul ignore next */
      (cov_1yb2nw5muv.b[2][1]++, [])).concat(defaultIncludes)
    }));
  },
  onReturn: function (source) {
    /* istanbul ignore next */
    cov_1yb2nw5muv.f[3]++;
    cov_1yb2nw5muv.s[16]++;
    return (
      /* istanbul ignore next */
      (cov_1yb2nw5muv.b[3][0]++, tpl) ||
      /* istanbul ignore next */
      (cov_1yb2nw5muv.b[3][1]++, source)
    );
  }
};