dd3a72e2048e8985466e9be9b9f217f2
"use strict";

/* istanbul ignore next */
var cov_12a0p6jzk4 = function () {
  var path = "/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/src/utils/validate.ts";
  var hash = "16f5e0e01d54393b313b24ce45b9aba1e8714e43";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/src/utils/validate.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "4": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 11,
          column: 23
        }
      },
      "5": {
        start: {
          line: 11,
          column: 41
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "6": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "7": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "8": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "9": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 17,
          column: 13
        }
      },
      "10": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 20
          }
        },
        loc: {
          start: {
            line: 9,
            column: 42
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        }, {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "16f5e0e01d54393b313b24ce45b9aba1e8714e43"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_12a0p6jzk4.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * validate
 *
 * takes an array of arrays of validations and
 * throws if an error occurs
 */

/* istanbul ignore next */
cov_12a0p6jzk4.s[1]++;

exports.validate = function (validations) {
  /* istanbul ignore next */
  cov_12a0p6jzk4.f[0]++;
  cov_12a0p6jzk4.s[2]++;

  if (process.env.NODE_ENV !== 'production') {
    /* istanbul ignore next */
    cov_12a0p6jzk4.b[0][0]++;
    cov_12a0p6jzk4.s[3]++;

    for (var _i =
    /* istanbul ignore next */
    (cov_12a0p6jzk4.s[4]++, 0), validations_1 =
    /* istanbul ignore next */
    (cov_12a0p6jzk4.s[5]++, validations); _i < validations_1.length; _i++) {
      var validation =
      /* istanbul ignore next */
      (cov_12a0p6jzk4.s[6]++, validations_1[_i]);
      var condition =
      /* istanbul ignore next */
      (cov_12a0p6jzk4.s[7]++, validation[0]);
      var errorMessage =
      /* istanbul ignore next */
      (cov_12a0p6jzk4.s[8]++, validation[1]);

      /* istanbul ignore next */
      cov_12a0p6jzk4.s[9]++;

      if (condition) {
        /* istanbul ignore next */
        cov_12a0p6jzk4.b[1][0]++;
        cov_12a0p6jzk4.s[10]++;
        throw new Error(errorMessage);
      } else
      /* istanbul ignore next */
      {
        cov_12a0p6jzk4.b[1][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_12a0p6jzk4.b[0][1]++;
  }
};