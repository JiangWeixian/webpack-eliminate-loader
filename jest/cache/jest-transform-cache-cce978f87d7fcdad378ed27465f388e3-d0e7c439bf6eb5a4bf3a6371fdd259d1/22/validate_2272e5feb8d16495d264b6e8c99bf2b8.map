{"file":"/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/src/utils/validate.ts","mappings":";;AAEA;;;;;GAKG;AACU,QAAA,QAAQ,GAAG,UAAC,WAAyB;IAChD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,KAAyB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;YAAjC,IAAM,UAAU,oBAAA;YACnB,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAA;YAC/B,IAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAA;YAClC,IAAI,SAAS,EAAE;gBACb,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAA;aAC9B;SACF;KACF;AACH,CAAC,CAAA","names":[],"sources":["/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/src/utils/validate.ts"],"sourcesContent":["import { Validation } from '@/typings'\n\n/**\n * validate\n *\n * takes an array of arrays of validations and\n * throws if an error occurs\n */\nexport const validate = (validations: Validation[]): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    for (const validation of validations) {\n      const condition = validation[0]\n      const errorMessage = validation[1]\n      if (condition) {\n        throw new Error(errorMessage)\n      }\n    }\n  }\n}\n"],"version":3}