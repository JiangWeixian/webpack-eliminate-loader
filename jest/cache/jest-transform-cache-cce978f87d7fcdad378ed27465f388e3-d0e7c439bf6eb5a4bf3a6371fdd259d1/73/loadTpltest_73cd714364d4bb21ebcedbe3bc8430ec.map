{"file":"/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/test/loadTpl.test.ts","mappings":";;;AAAA,kDAAmB;AACnB,sDAAuB;AACvB,uFAA4D;AAG5D,QAAQ,CAAC,qBAAqB,EAAE;IAC9B,IAAI,CAAC,gCAAgC,EAAE;QACrC,IAAM,aAAa,GAAG,YAAE,CAAC,YAAY,CAAC,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,8BAA8B,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QACzG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACvB,MAAM,CAAC,OAAO,uCAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IAC5D,CAAC,CAAC,CAAA;IAEF,qDAAqD;IACrD,8GAA8G;IAC9G,2BAA2B;IAC3B,sDAAsD;IACtD,KAAK;IAEL,yDAAyD;IACzD,2CAA2C;IAC3C,KAAK;AACP,CAAC,CAAC,CAAA","names":[],"sources":["/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/test/loadTpl.test.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport { utils } from 'lib/webpack-eliminate-loader.cjs.js';\n\n\ndescribe('start load template', () => {\n  test('load react-route tpl currently', () => {\n    const reactRouteTpl = fs.readFileSync(path.resolve(__dirname, '../templates/react-route.tpl')).toString()\n    expect(true).toBe(true)\n    expect(typeof utils.loadTpl('react-route')).toBe('string')\n  })\n\n  // test('load react-route tpl willbe cached', () => {\n  //   const reactRouteTpl = fs.readFileSync(path.resolve(__dirname, '../templates/react-route.tpl')).toString()\n  //   loadTpl('react-route')\n  //   expect(cached['react-route']).toBe(reactRouteTpl)\n  // })\n\n  // test('load unsupport template will throw err', () => {\n  //   expect(loadTpl('xx' as any)).toThrow()\n  // })\n})"],"version":3}