5f7d34019bea21a92c017c785729af30
"use strict";

/* istanbul ignore next */
var cov_1j2npilfjb = function () {
  var path = "/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/src/utils/loadTpl.ts";
  var hash = "28f9685605ba27d02f514801cf252c543f301754";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/src/utils/loadTpl.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 14
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 53
        }
      },
      "3": {
        start: {
          line: 5,
          column: 11
        },
        end: {
          line: 5,
          column: 49
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 70
        }
      },
      "5": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 20
        }
      },
      "6": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "7": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 11,
          column: 5
        }
      },
      "8": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 45
        }
      },
      "9": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "10": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 117
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 25
        }
      },
      "13": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 19
          }
        },
        loc: {
          start: {
            line: 8,
            column: 37
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 8
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        }, {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 38
          }
        }, {
          start: {
            line: 10,
            column: 42
          },
          end: {
            line: 10,
            column: 44
          }
        }],
        line: 10
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "28f9685605ba27d02f514801cf252c543f301754"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_1j2npilfjb.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var tslib_1 =
/* istanbul ignore next */
(cov_1j2npilfjb.s[1]++, require("tslib"));
var path_1 =
/* istanbul ignore next */
(cov_1j2npilfjb.s[2]++, tslib_1.__importDefault(require("path")));
var fs_1 =
/* istanbul ignore next */
(cov_1j2npilfjb.s[3]++, tslib_1.__importDefault(require("fs")));
var TEPLATES_PATH =
/* istanbul ignore next */
(cov_1j2npilfjb.s[4]++, path_1.default.resolve(__dirname, '../templates/'));

/* istanbul ignore next */
cov_1j2npilfjb.s[5]++;
exports.cached = {};

/* istanbul ignore next */
cov_1j2npilfjb.s[6]++;

exports.loadTpl = function (tplName) {
  /* istanbul ignore next */
  cov_1j2npilfjb.f[0]++;
  cov_1j2npilfjb.s[7]++;

  if (exports.cached[tplName]) {
    /* istanbul ignore next */
    cov_1j2npilfjb.b[0][0]++;
    cov_1j2npilfjb.s[8]++;
    return (
      /* istanbul ignore next */
      (cov_1j2npilfjb.b[1][0]++, exports.cached[tplName]) ||
      /* istanbul ignore next */
      (cov_1j2npilfjb.b[1][1]++, '')
    );
  } else
  /* istanbul ignore next */
  {
    cov_1j2npilfjb.b[0][1]++;
  }

  cov_1j2npilfjb.s[9]++;

  try {
    var presetTpl =
    /* istanbul ignore next */
    (cov_1j2npilfjb.s[10]++, fs_1.default.readFileSync(path_1.default.resolve(TEPLATES_PATH, tplName + ".tpl")).toString());

    /* istanbul ignore next */
    cov_1j2npilfjb.s[11]++;
    exports.cached[tplName] = presetTpl;

    /* istanbul ignore next */
    cov_1j2npilfjb.s[12]++;
    return presetTpl;
  } catch (_a) {
    /* istanbul ignore next */
    cov_1j2npilfjb.s[13]++;
    throw new Error('file dont\'s exited');
  }
};