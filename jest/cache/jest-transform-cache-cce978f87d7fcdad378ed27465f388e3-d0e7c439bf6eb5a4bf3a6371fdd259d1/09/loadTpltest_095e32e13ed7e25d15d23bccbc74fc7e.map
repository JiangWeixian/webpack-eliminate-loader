{"file":"/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/test/loadTpl.test.ts","mappings":";;;AAAA,kDAAmB;AACnB,sDAAuB;AACvB,0FAA+D;AAG/D,QAAQ,CAAC,qBAAqB,EAAE;IAC9B,IAAI,CAAC,gCAAgC,EAAE;QACrC,IAAM,aAAa,GAAG,YAAE,CAAC,YAAY,CAAC,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,8BAA8B,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QACzG,MAAM,CAAC,uCAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IAC1D,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,wCAAwC,EAAE;QAC7C,MAAM,CAAC,uCAAK,CAAC,OAAO,CAAC,IAAW,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;IAC9C,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","names":[],"sources":["/Users/qidanta/Documents/webprojects/webpack-eliminate-loader/test/loadTpl.test.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport { utils } from '../lib/webpack-eliminate-loader.cjs.js';\n\n\ndescribe('start load template', () => {\n  test('load react-route tpl currently', () => {\n    const reactRouteTpl = fs.readFileSync(path.resolve(__dirname, '../templates/react-route.tpl')).toString()\n    expect(utils.loadTpl('react-route')).toBe(reactRouteTpl)\n  })\n\n  test('load unsupport template will throw err', () => {\n    expect(utils.loadTpl('xx' as any)).toThrow()\n  })\n})"],"version":3}