'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
var match_1 = require('src/utils/match')
describe('start test utils.match', function() {
  test('hasInclude should return true when first arg is undefined', function() {
    expect(match_1.hasIncluded(undefined, [])).toBe(true)
  })
  test('hasInclude should return true when match', function() {
    expect(match_1.hasIncluded('src/pages', ['src/pages'])).toBe(true)
  })
  test('hasExclude should return false when first arg is undefined', function() {
    expect(match_1.hasExcluded(undefined, [])).toBe(false)
  })
  test('hasInclude should return true when match', function() {
    expect(match_1.hasExcluded('src/pages', ['src/pages'])).toBe(true)
  })
  test('hasInclude and hasExclude should support glob regex', function() {
    expect(match_1.hasIncluded('src/pages/home.jsx', ['**/pages/**'])).toBe(true)
    expect(match_1.hasExcluded('src/pages/home.jsx', ['**/pages/**'])).toBe(true)
  })
  test('match should return false when options is undefined', function() {
    expect(match_1.match('src/pages/home.jsx')).toBe(false)
  })
  test('match should return false when include matched', function() {
    match_1.match('src/pages/home.jsx', {
      presets: ['react-route'],
      include: ['**/pages/**'],
    })
  })
  test('match should return true when exclude matched', function() {
    match_1.match('src/pages/home.jsx', {
      presets: ['react-route'],
      exclude: ['**/pages/**'],
    })
  })
})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3FpZGFudGEvRG9jdW1lbnRzL3dlYnByb2plY3RzL3dlYnBhY2stZWxpbWluYXRlLWxvYWRlci90ZXN0L21hdGNoLnRlc3QudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSx5Q0FBaUU7QUFFakUsUUFBUSxDQUFDLHdCQUF3QixFQUFFO0lBQ2pDLElBQUksQ0FBQywyREFBMkQsRUFBRTtRQUNoRSxNQUFNLENBQUMsbUJBQVcsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDaEQsQ0FBQyxDQUFDLENBQUE7SUFFRixJQUFJLENBQUMsMENBQTBDLEVBQUU7UUFDOUMsTUFBTSxDQUFDLG1CQUFXLENBQUMsV0FBVyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUM3RCxDQUFDLENBQUMsQ0FBQTtJQUVGLElBQUksQ0FBQyw0REFBNEQsRUFBRTtRQUNoRSxNQUFNLENBQUMsbUJBQVcsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDakQsQ0FBQyxDQUFDLENBQUE7SUFFRixJQUFJLENBQUMsMENBQTBDLEVBQUU7UUFDOUMsTUFBTSxDQUFDLG1CQUFXLENBQUMsV0FBVyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUM3RCxDQUFDLENBQUMsQ0FBQTtJQUVGLElBQUksQ0FBQyxxREFBcUQsRUFBRTtRQUMzRCxNQUFNLENBQUMsbUJBQVcsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDckUsTUFBTSxDQUFDLG1CQUFXLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3RFLENBQUMsQ0FBQyxDQUFBO0lBRUYsSUFBSSxDQUFDLHFEQUFxRCxFQUFFO1FBQzNELE1BQU0sQ0FBQyxhQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUNoRCxDQUFDLENBQUMsQ0FBQTtJQUVGLElBQUksQ0FBQyxnREFBZ0QsRUFBRTtRQUN0RCxhQUFLLENBQUMsb0JBQW9CLEVBQUU7WUFDM0IsT0FBTyxFQUFFO2dCQUNSLGFBQWE7YUFDYjtZQUNELE9BQU8sRUFBRTtnQkFDUixhQUFhO2FBQ2I7U0FDRCxDQUFDLENBQUE7SUFDSCxDQUFDLENBQUMsQ0FBQTtJQUVGLElBQUksQ0FBQywrQ0FBK0MsRUFBRTtRQUNyRCxhQUFLLENBQUMsb0JBQW9CLEVBQUU7WUFDM0IsT0FBTyxFQUFFO2dCQUNSLGFBQWE7YUFDYjtZQUNELE9BQU8sRUFBRTtnQkFDUixhQUFhO2FBQ2I7U0FDRCxDQUFDLENBQUE7SUFDSCxDQUFDLENBQUMsQ0FBQTtBQUNILENBQUMsQ0FBQyxDQUFBIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9xaWRhbnRhL0RvY3VtZW50cy93ZWJwcm9qZWN0cy93ZWJwYWNrLWVsaW1pbmF0ZS1sb2FkZXIvdGVzdC9tYXRjaC50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hdGNoLCBoYXNJbmNsdWRlZCwgaGFzRXhjbHVkZWQgfSBmcm9tICdzcmMvdXRpbHMvbWF0Y2gnXG5cbmRlc2NyaWJlKCdzdGFydCB0ZXN0IHV0aWxzLm1hdGNoJywgKCkgPT4ge1xuICB0ZXN0KCdoYXNJbmNsdWRlIHNob3VsZCByZXR1cm4gdHJ1ZSB3aGVuIGZpcnN0IGFyZyBpcyB1bmRlZmluZWQnLCAoKSA9PiB7XG4gICAgZXhwZWN0KGhhc0luY2x1ZGVkKHVuZGVmaW5lZCwgW10pKS50b0JlKHRydWUpXG5cdH0pXG5cblx0dGVzdCgnaGFzSW5jbHVkZSBzaG91bGQgcmV0dXJuIHRydWUgd2hlbiBtYXRjaCcsICgpID0+IHtcbiAgICBleHBlY3QoaGFzSW5jbHVkZWQoJ3NyYy9wYWdlcycsIFsnc3JjL3BhZ2VzJ10pKS50b0JlKHRydWUpXG5cdH0pXG5cblx0dGVzdCgnaGFzRXhjbHVkZSBzaG91bGQgcmV0dXJuIGZhbHNlIHdoZW4gZmlyc3QgYXJnIGlzIHVuZGVmaW5lZCcsICgpID0+IHtcbiAgICBleHBlY3QoaGFzRXhjbHVkZWQodW5kZWZpbmVkLCBbXSkpLnRvQmUoZmFsc2UpXG5cdH0pXG5cdFxuXHR0ZXN0KCdoYXNJbmNsdWRlIHNob3VsZCByZXR1cm4gdHJ1ZSB3aGVuIG1hdGNoJywgKCkgPT4ge1xuICAgIGV4cGVjdChoYXNFeGNsdWRlZCgnc3JjL3BhZ2VzJywgWydzcmMvcGFnZXMnXSkpLnRvQmUodHJ1ZSlcblx0fSlcblxuXHR0ZXN0KCdoYXNJbmNsdWRlIGFuZCBoYXNFeGNsdWRlIHNob3VsZCBzdXBwb3J0IGdsb2IgcmVnZXgnLCAoKSA9PiB7XG5cdFx0ZXhwZWN0KGhhc0luY2x1ZGVkKCdzcmMvcGFnZXMvaG9tZS5qc3gnLCBbJyoqL3BhZ2VzLyoqJ10pKS50b0JlKHRydWUpXG5cdFx0ZXhwZWN0KGhhc0V4Y2x1ZGVkKCdzcmMvcGFnZXMvaG9tZS5qc3gnLCBbJyoqL3BhZ2VzLyoqJ10pKS50b0JlKHRydWUpXG5cdH0pXG5cdFxuXHR0ZXN0KCdtYXRjaCBzaG91bGQgcmV0dXJuIGZhbHNlIHdoZW4gb3B0aW9ucyBpcyB1bmRlZmluZWQnLCAoKSA9PiB7XG5cdFx0ZXhwZWN0KG1hdGNoKCdzcmMvcGFnZXMvaG9tZS5qc3gnKSkudG9CZShmYWxzZSlcblx0fSlcblxuXHR0ZXN0KCdtYXRjaCBzaG91bGQgcmV0dXJuIGZhbHNlIHdoZW4gaW5jbHVkZSBtYXRjaGVkJywgKCkgPT4ge1xuXHRcdG1hdGNoKCdzcmMvcGFnZXMvaG9tZS5qc3gnLCB7XG5cdFx0XHRwcmVzZXRzOiBbXG5cdFx0XHRcdCdyZWFjdC1yb3V0ZSdcblx0XHRcdF0sXG5cdFx0XHRpbmNsdWRlOiBbXG5cdFx0XHRcdCcqKi9wYWdlcy8qKidcblx0XHRcdF1cblx0XHR9KVxuXHR9KVxuXG5cdHRlc3QoJ21hdGNoIHNob3VsZCByZXR1cm4gdHJ1ZSB3aGVuIGV4Y2x1ZGUgbWF0Y2hlZCcsICgpID0+IHtcblx0XHRtYXRjaCgnc3JjL3BhZ2VzL2hvbWUuanN4Jywge1xuXHRcdFx0cHJlc2V0czogW1xuXHRcdFx0XHQncmVhY3Qtcm91dGUnXG5cdFx0XHRdLFxuXHRcdFx0ZXhjbHVkZTogW1xuXHRcdFx0XHQnKiovcGFnZXMvKionXG5cdFx0XHRdXG5cdFx0fSlcblx0fSlcbn0pXG4iXSwidmVyc2lvbiI6M30=
